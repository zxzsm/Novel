@using Novel.Common
@{
    Layout = "_LayoutBook";
}

<script src="~/js/vue.min.js"></script>
<link href="~/css/common-item.css?v=@CssVersion.M_CommonItem_Ver" rel="stylesheet" />

<div class="pure-g" style="width:100%;">
    <div class="pure-u-1 pure-u-md-1">
        @using (Html.BeginForm("Search", "Index", FormMethod.Get, new { style = "margin:1%;", @class = "pure-form", id = "headsearch" }))
        {
            @Html.TextBox("keyword", null, new { @class = "pure-u-1" });
        }
    </div>
</div>
<div class="pure-g">
    <div class="pure-u-1-1 mtop" v-for="item in bookitems">
        <a class="book-layout" v-bind:href="item.Url">
            <img class="pure-img book-cover" v-bind:src="item.BookImage" v-bind:alt="item.BookName">
            <div class="book-cell">
                <h4 class="book-title">{{item.BookName}}</h4>
                <p class="book-desc" v-html="item.BookSummary"></p>
                <div class="book-meta">
                    <div class="book-meta1">
                        <span class="book-author">
                            {{item.BookAuthor}}
                        </span>
                    </div>
                </div>
            </div>
        </a>
    </div>
</div>
<script>
    var app = new Vue(
        {
            el: "#body",
            data: {
                bookitems: [],
                keyword: "",
                page: 1,
                pageCount:0
            },
            methods: {
                search: function () {
                    var _self = this;
                    this.page = this.page + 1;
                    if (this.page > this.pageCount) {
                        return;
                    }
                    $.post("@Url.Action("SearchKeyword", "Index")", {
                        keyword: _self.keyword,
                        pageIndex: _self.page,
                        pageSize: 10
                    }, function (rs) {
                        for (var i = 0; i < rs.items.length; i++) {
                            _self.bookitems.push(rs.items[i]);
                        }
                        _self.pageCount = rs.pageCount;
                        _self.pageIndex = rs.currentPageIndex;
                    });
                }
            },
            created: function () {
                var data = @Html.Raw(ViewData["InitDatas"]);
                this.bookitems = data.items;
                this.pageIndex = data.currentPageIndex;
                this.pageCount = data.pageCount;
            }
        });

</script>