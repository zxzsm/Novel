@using System.Web
@model Novel.Entity.Models.ContentViewModel
@using Novel.Entity.ViewModels
@using Novel.Utilities
@{
    Layout = "_LayoutContent";
}
<script src="~/js/content.js"></script>
<div class="pure-g">
    <div class="pure-u-1" style="padding:10px;">
        <a href="/">首页</a>/
        @if (Model.Category != null)
        {
          <text>  <a href="@Url.Action("Category","Index",new { category=Pinyin.GetPinYin(Model.Category.CategoryName)})"> @Model.Category.CategoryName</a>/</text>
        }
        <a href="@Url.Action("Novel",new { id=Model.BookId })"> @Model.BookName</a>&nbsp;/<a href="@Url.Action("Content",new { itemId=Model.ItemId })"> @Model.ItemName</a>
    </div>
    <div class="pure-u-1" style="text-align:center;"><h2 class="content-subhead">@Model.ItemName</h2></div>
    <div class="pure-u-1">
        <div class="ncontent">
            @Html.Raw(HttpUtility.HtmlDecode(Model.Content))
        </div>
        <div class="nfooter">
            @if (Model.PreId > 0)
            {
                <a class="f14" id="pre" href="@Url.Action("Content",new { itemId=Model.PreId })" title="@Model.BookName-@Model.PreItemName">上一章</a>
            }
            @if (Model.NextId > 0)
            {
                <a class="f14" id="next" href="@Url.Action("Content",new { itemId=Model.NextId })" title="@Model.BookName-@Model.NextName">下一章</a>
            }
        </div>
    </div>
</div>


