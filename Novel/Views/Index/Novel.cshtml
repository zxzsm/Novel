@using Novel.Entity.Models
@model NovelViewModel
@{
    Layout = "_Layout";
}
<style>
    .item {
        height: 40px;
    }

        .item a {
            margin-left: 10%;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            display: block;
        }

    .ca {
        background-color: #FD8000;
        padding: 10px 20px;
        color: white !important;
    }

    .bg-gray {
        background-color: #e6e6e6;
        color:black !important;
    }
</style>
<div class="pure-g btitle fr">
    <div class="pure-u-1-4">
        <div class="novel">
            <img class="img" src="@Model.Book.BookImage">
        </div>
    </div>
    <div class="pure-u-3-4">
        <table class="pure-table tbnb">
            <tbody>
                <tr>
                    <td>
                        <h2 class="content-subhead" style="margin:0px;">@Model.Book.BookName</h2>
                    </td>
                    <td></td>
                </tr>
                <tr>
                    <td>作者</td>
                    <td>@Model.Book.BookAuthor</td>
                </tr>
                <tr>
                    <td>最后更新时间</td>
                    <td>@Model.Book.UpdateTime</td>
                </tr>
                <tr>
                    <td>状态</td>
                    @{
                        string state = Model.Book.BookState.HasValue && Model.Book.BookState.Value == 1 ? "完结" : "连载中";
                    }
                    <td>@state</td>
                </tr>
                <tr>
                    <td>最新章节</td>
                    @{
                        BookItemViewModel lastItem = Model.Items.OrderByDescending(m => m.ItemId).FirstOrDefault();
                    }
                    <td><a href="@Url.Action("Content",new { itemId=lastItem.ItemId })">@lastItem.ItemName</a></td>
                </tr>
                <tr>
                    <td colspan="2">
                        @{
                            List<int> bookshelves = ViewData["bookshelves"] as List<int>;
                            bool isaddbook = bookshelves.Any(m => m == Model.Book.BookId);
                            string bookshelftext = isaddbook ? "已入书架" : "加入书架";
                            string attclass = isaddbook ? "ca bg-gray" : "ca";
                        }
                        <a class="@attclass" href="javascript:" id="bookshelf">@bookshelftext</a>
                        <a class="ca" href="javascript:">推荐此书</a>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="pure-u-1-4"></div>
    <div class="pure-u-3-4">
        <hr style="border-top:1px #808080 dashed ;" />
    </div>

    <div class="pure-u-1-4"></div>
    <div class="pure-u-3-4">
        @Html.Raw(Model.Book.BookSummary)
    </div>
</div>
<div class="pure-g btitle fr">
    @foreach (var item in Model.Items)
    {
        <div class="pure-u-1-2 item">
            <a href="@Url.Action("Content",new { itemId=item.ItemId })" title="@item.ItemName">
                @item.ItemName
            </a>
        </div>
    }

</div>
<script>
    @if (!isaddbook)
    {
        <text>
    $("#bookshelf").click(function() {
            var url = "@Url.Action("BookShelf", "Book")";
            var id = @Model.Book.BookId;
        $.post(url, { id: id }, function(rs) {
            if (rs && rs.status == 0) {
                $('#bookshelf').unbind("click");
                $("#bookshelf").html("已入书架")
                $("#bookshelf").addClass("bg-gray");
            }
            });
    });
    </text>
    }

</script>