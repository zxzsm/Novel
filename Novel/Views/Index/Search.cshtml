@model Novel.Entity.ViewModels.SearchViewModel
@using Novel.Common
@using Novel.Utilities
@{
    Layout = "_Layout";
}
<script src="~/js/knockout-3.4.2.js"></script>
<script src="~/js/linq.js"></script>
<style>
    .pure-table {
        font-size: 14px;
    }

        .pure-table td a {
            padding: 5px;
            margin-left: 10px;
        }

    .sa, .sa:hover {
        background-color: red;
        color: white;
    }
</style>

@using (Html.BeginForm("Search", "Index"))
{
    <div class="pure-g fr btitle">
        <div class="pure-u-1">
            <table class="pure-table tbnb">
                <tbody>
                    <tr>
                        <td>
                            分类
                        </td>
                        <td data-bind="foreach: categories">
                            <a href="#" data-bind="text:name,click:$parent.cclick,attr:{class:$data.selectd()==true?'sa':''}"></a>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            状态
                        </td>
                        <td data-bind="foreach: states">
                            <a href="#" data-bind="text:name,click:$parent.sclick,attr:{class:$data.selectd()==true?'sa':''}"></a>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            字数
                        </td>
                        <td data-bind="foreach: wordNumbers">
                            <a href="#" data-bind="text:name,click:$parent.nclick,attr:{class:$data.selectd()==true?'sa':''}"></a>
                        </td>
                    </tr>
                </tbody>
            </table>
            <label for="name"></label>

        </div>
    </div>
    @Html.HiddenFor(m => m.keyword, new { });
    <script type="text/javascript">
        @{
            int serializing = (int)BookState.Serializing;
            int end = (int)BookState.End;
            var jdata = ViewData["BookCategory"] as List<BookCategory>;

            var t = jdata.Select(m => new { name = m.CategoryName, value = m.CategoryId });
            var json = JsonUtil.SerializeObject(jdata.Select(m => new { name = m.CategoryName, value = m.CategoryId}));
         }
        var viewModel = {
            categories: ko.observableArray([{
                name: "全部", value: "", selectd: ko.observable(false)
            }])
            ,
            states: ko.observableArray([
                { name: "全部", value: "", selectd: ko.observable(false) },
                { name: "连载", value: "@serializing", selectd: ko.observable(false)  },
                { name: "完结", value: "@end", selectd: ko.observable(false)  }
            ]),
            wordNumbers: ko.observableArray([
                { name: "全部", value: "", selectd: ko.observable(false)  },
                { name: "50万字以下", value: "50万字以下", selectd: ko.observable(false)  },
                { name: "50-200万之间", value: "50-200万之间", selectd: ko.observable(false)  },
                { name: "200万以上", value: "200万以上", selectd: ko.observable(false)  },
            ]),
            cclick: function () {
                var item = this;
                var parent = viewModel;
                commclick(item, parent.categories());
            },
            sclick: function () {
                var item = this;
                var parent = viewModel;
                commclick(item, parent.states());
            },
            nclick: function () {
                var item = this;
                var parent = viewModel;
                commclick(item, parent.wordNumbers());
            }
        };
        function commclick(item, datas) {
            var t = !item.selectd();
            item.selectd(t);
            if (item.name == "全部") {
                for (var i = 1; i < datas.length; i++) {
                    datas[i].selectd(t);
                }
            }
            else {
                var arr = Enumerable.from(datas);
                var selectedCount = arr.where(function (x) {
                    return x.name != "全部" && x.selectd();
                }
                ).count();
                if (selectedCount == (arr.count() - 1)) {
                    datas[0].selectd(true);
                }
                else {
                    datas[0].selectd(false);
                }
            }
        }

        var c = @Html.Raw(json);
        for (var i = 0; i < c.length; i++) {
            c[i].selectd = ko.observable(false);
            viewModel.categories.push(c[i]);
        }
        debugger;
        ko.applyBindings(viewModel);
    </script>
}