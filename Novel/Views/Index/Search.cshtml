@model Novel.Entity.ViewModels.SearchViewModel
@using Novel.Common
@using Novel.Utilities
@{
    Layout = "_Layout";
}
<script src="~/js/linq.js"></script>
<script src="~/js/vue.min.js"></script>
<!-- use the latest release -->
<script src="~/js/paginate.js"></script>
<link href="~/css/jquery.mloading.css" rel="stylesheet" />
<script src="~/js/jquery.mloading.js"></script>
<link href="~/css/search.css" rel="stylesheet" />

<form class="pure-form" v-on:sumbit="">
    <div id="serarch">
        <div class="pure-g">
            <div class="pure-u-1" style="margin:20px 0px;text-align:center;">
                <input id="keyword" name="keyword" type="text" v-model="keyword" style="width: 30%;" onsubmit="return false;">
                <input type="button" class="pure-button button-error" value="搜索" v-on:click="search()" />
            </div>

        </div>
        <div class="pure-g fr btitle">
            <div class="pure-u-1">
                <table class="pure-table tbnb">
                    <tbody>
                        <tr>
                            <td>
                                分类
                            </td>
                            <td>
                                <a href="#" v-for="item in categories" v-bind:class="item.selectd?'sa':''"
                                   v-on:click="click(item,categories)">
                                    {{item.name}}
                                </a>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                状态
                            </td>
                            <td>
                                <a href="#" v-for="item in states" v-bind:class="item.selectd?'sa':''"
                                   v-on:click="click(item,states)">
                                    {{item.name}}
                                </a>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                字数
                            </td>
                            <td>
                                <a href="#" v-for="item in wordNumbers" v-bind:class="item.selectd?'sa':''"
                                   v-on:click="click(item,wordNumbers)">
                                    {{item.name}}
                                </a>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <label for="name"></label>

            </div>
        </div>
        <div class="pure-g fr ">
            <div class="pure-u-1-1 mtop" v-for="item in bookitems">
                <a class="book-layout" v-bind:href="item.Url">
                    <img class="pure-img book-cover" v-bind:src="item.BookImage" v-bind:alt="item.BookName">
                    <div class="book-cell">
                        <h4 class="book-title">{{item.BookName}}</h4>
                        <p class="book-desc" v-html="item.BookSummary"></p>
                        <div class="book-meta">
                            <div class="book-meta1">
                                <span class="book-author">
                                    {{item.BookAuthor}}
                                </span>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
            @*<div style="width:100%">
                    <table class="pure-table tbnb">
                        <tr v-for="item in bookitems">
                            <td>
                                <a :href="geturl(item.bookId)" :title="item.bookName" :alt="item.bookName">
                                    <img v-bind:src="item.bookImage" class="img">
                                </a>
                            </td>
                            <td>
                                <table class="pure-table tbnb bookinfo">
                                    <tbody>
                                        <tr>
                                            <td> <a class="title" target="_blank" v-bind:href="geturl(item.bookId)">{{item.bookName}}</a></td>
                                        </tr>
                                        <tr>
                                            <td> {{item.bookAuthor}}</td>
                                        </tr>
                                        <tr>
                                            <td class="bookinfo-intro" style="overflow:hidden" v-html="item.bookSummary"></td>
                                        </tr>
                                        <tr>
                                            <td><a class="title" target="_blank" v-bind:href="geturl(item.bookId)">{{item.bookName}}</a></td>
                                        </tr>
                                    </tbody>
                                </table>

                            </td>

                        </tr>
                    </table>
                </div>*@
            <div style="width:100%;">
                <paginate v-model="page"
                          :page-count="pageCount"
                          :click-handler="clickNum"
                          :prev-text="'上一页'"
                          :next-text="'下一页'"
                          :active-class="'pselectd'"
                          :container-class="'pagination'"
                          :page-class="'page-item'">
                </paginate>
            </div>
        </div>

    </div>
</form>

<script type="text/javascript">
        $("#headsearch input").hide();
        $("#headsearch button").hide();
        @{
            int serializing = (int)BookState.Serializing;
            int end = (int)BookState.End;
            var jdata = ViewData["BookCategory"] as List<BookCategory>;

            var t = jdata.Select(m => new { name = m.CategoryName, value = m.CategoryId });
            var json = JsonUtil.SerializeObject(jdata.Select(m => new { name = m.CategoryName, value = m.CategoryId}));
         }
        $("#container").mLoading({
            text: "",//加载文字，默认值：加载中...
            icon: "",//加载图标，默认值：一个小型的base64的gif图片
            html: false,//设置加载内容是否是html格式，默认值是false
            content: "",//忽略icon和text的值，直接在加载框中显示此值
            mask: true//是否显示遮罩效果，默认显示
        });
        Vue.component('paginate', VuejsPaginate);
        var app = new Vue(
            {
                el: "#serarch",
                data: {
                    page: 1,
                    pageCount:1,
                    categories: [
                        {
                            name: "全部", value: "", selectd: false
                        }
                    ],
                    states: [
                        { name: "全部", value: "", selectd: false },
                        { name: "连载", value: "@serializing", selectd: false },
                        { name: "完结", value: "@end", selectd: false }
                    ],
                    wordNumbers: [
                        { name: "全部", value: "", selectd: false },
                        { name: "50万字以下", value: "50万字以下", selectd: false },
                        { name: "50-200万之间", value: "50-200万之间", selectd: false },
                        { name: "200万以上", value: "200万以上", selectd: false }
                    ],
                    bookitems: [],
                    keyword: "@Html.Raw(Model.keyword)"
                },
                methods: {
                    click: function (item, datas) {
                        var t = !item.selectd;
                        item.selectd = t;
                        if (item.name == "全部") {
                            for (var i = 1; i < datas.length; i++) {
                                datas[i].selectd=t;
                            }
                        }
                        else {
                            var arr = Enumerable.from(datas);
                            var selectedCount = arr.where(function (x) {
                                return x.name != "全部" && x.selectd;
                            }
                            ).count();
                            if (selectedCount == (arr.count() - 1)) {
                                datas[0].selectd=true
                            }
                            else {
                                datas[0].selectd = false;
                            }
                        }
                    },
                    search: function () {
                        var _self = this;
                        $("#container").mLoading("show");
                        $.post("@Url.Action("SearchKeyword", "Index")", {
                            keyword: _self.keyword,
                            pageIndex: _self.page,
                            pageSize: 10
                        }, function (rs) {
                            _self.bookitems = rs.items;
                            _self.pageCount = rs.pageCount;
                            $("#container").mLoading("hide");
                        });
                    },
                    geturl: function (id) {
                        return "/book/" + id + ".html";
                    },
                    clickNum: function (pagenum) {
                        this.search();
                    }
                },
                created: function () {
                    var c = @Html.Raw(json);
                    for (var i = 0; i < c.length; i++) {
                        c[i].selectd = false;
                        this.categories.push(c[i]);
                    }
                    this.search();
                }
            });
</script>